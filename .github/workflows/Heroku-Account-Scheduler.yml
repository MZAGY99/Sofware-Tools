name: Heroku-Account

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 13 */15 * *'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
       - name: Checkouts
         uses: actions/checkout@v2

       - name: Check Conditions And Configs
         run: |
              CURRENT_DAY=$(echo "$(date +%j) + 0" | bc)
              if [[ "${CURRENT_DAY}" -lt "15" ]]; then
                  echo "USE_FIRST_ACCOUNT=true" >> "${GITHUB_ENV}"
              else
                  echo "USE_FIRST_ACCOUNT=false" >> "${GITHUB_ENV}"
              fi
              if [[ "${{secrets.TG_TOKEN}}" != "" ]] && [[ "${{secrets.TG_CHAT}}" != "" ]]; then echo "TELEGRAM_UPDATE=true" >> "${GITHUB_ENV}" && echo "Telegram Update Enabled" ; fi

       - name: Switch To First Heroku Account
         uses: akhileshns/heroku-deploy@v3.12.12
         with:
           heroku_api_key: ${{secrets.HEROKU_API_KEY_1}}
           heroku_email: ${{secrets.HEROKU_EMAIL_1}}
           heroku_app_name: ${{secrets.HEROKU_APP_NAME_1}}
           justlogin: true
       - run: |
              heroku auth:whoami
              if [[ "${USE_FIRST_ACCOUNT}" == "true" ]]; then
                  echo "Switching To First Account App!"
                  heroku ps:scale web=1 --app ${{secrets.HEROKU_APP_NAME_1}} || heroku ps:scale worker=1 --app ${{secrets.HEROKU_APP_NAME_1}}
              elif [[ "${USE_FIRST_ACCOUNT}" == "false" ]]; then
                  echo "Turning Off First Account App!"
                  heroku ps:scale web=0 --app ${{secrets.HEROKU_APP_NAME_1}} || heroku ps:scale worker=0 --app ${{secrets.HEROKU_APP_NAME_1}}
              fi
              
       - name: Switch To Second Heroku Account
         uses: akhileshns/heroku-deploy@v3.12.12
         with:
           heroku_api_key: ${{secrets.HEROKU_API_KEY_2}}
           heroku_email: ${{secrets.HEROKU_EMAIL_2}}
           heroku_app_name: ${{secrets.HEROKU_APP_NAME_2}}
           justlogin: true
       - run: |
              heroku auth:whoami
              if [[ "${USE_FIRST_ACCOUNT}" == "false" ]]; then
                  echo "Switching To Second Account App!"
                  heroku ps:scale web=1 --app ${{secrets.HEROKU_APP_NAME_2}} || heroku ps:scale worker=1 --app ${{secrets.HEROKU_APP_NAME_2}}
              elif [[ "${USE_FIRST_ACCOUNT}" == "true" ]]; then
                  echo "Turning Off Second Account App!"
                  heroku ps:scale web=0 --app ${{secrets.HEROKU_APP_NAME_2}} || heroku ps:scale worker=0 --app ${{secrets.HEROKU_APP_NAME_2}}
              fi
              
       - name: Send Telegram Notification
         if: env.TELEGRAM_UPDATE == 'true'
         run: |
              TG_TOKEN=${{secrets.TG_TOKEN}}
              TG_CHAT=${{secrets.TG_CHAT}}
              HEROKU_APP_NAME_2=${{secrets.HEROKU_APP_NAME_2}}
              HEROKU_APP_NAME_1=${{secrets.HEROKU_APP_NAME_1}}
              HEROKU_EMAIL_1=${{secrets.HEROKU_EMAIL_1}}
              HEROKU_EMAIL_2=${{secrets.HEROKU_EMAIL_2}}
              if [[ "${USE_FIRST_ACCOUNT}" == "true" ]]; then
                  TEXT="#LOGGER #HEROKU Switched To Account 1 For App $HEROKU_APP_NAME_1 With Email $HEROKU_EMAIL_1 "
              elif [[ "${USE_FIRST_ACCOUNT}" == "false" ]]; then
                  TEXT="#LOGGER #HEROKU Switched To Account 2 For App $HEROKU_APP_NAME_2 With Email $HEROKU_EMAIL_2 "
              fi
              curl -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" -d "chat_id=${TG_CHAT}&text=${TEXT}"
